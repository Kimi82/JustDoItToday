{"ast":null,"code":"import _slicedToArray from\"/Users/kamil/Desktop/Programowanie/ygo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import'./ToDoChart.css';import{db}from'../../firebase.js';import{Bar}from'react-chartjs-2';export default function ToDoList(_ref){var user=_ref.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),doneTasks=_useState4[0],setTaskDone=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),doneTaskPercent=_useState6[0],setPercent=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),chartData=_useState8[0],setChartData=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),chartDataExist=_useState10[0],setChartDataExist=_useState10[1];var today=new Date();var todayDate=String(today.getDate()).padStart(2,'0')+\"_\"+String(today.getMonth()+1).padStart(2,'0');var GetDates=function GetDates(){var aryDates=[];var dbDates=[];for(var i=-6;i<=0;i++){var currentDate=new Date();currentDate.setDate(startDate.getDate()+i);aryDates.push(DayAsString(currentDate.getDay())+\", \"+currentDate.getDate());dbDates.push(String(currentDate.getDate()).padStart(2,'0')+\"_\"+String(currentDate.getMonth()+1).padStart(2,'0'));}return[aryDates,dbDates];};useEffect(function(){setPercent(doneTasks/tasks.length*100);},[tasks,doneTasks]);var DayAsString=function DayAsString(dayIndex){var weekdays=new Array(7);weekdays[0]=\"Sunday\";weekdays[1]=\"Monday\";weekdays[2]=\"Tuesday\";weekdays[3]=\"Wednesday\";weekdays[4]=\"Thursday\";weekdays[5]=\"Friday\";weekdays[6]=\"Saturday\";return weekdays[dayIndex];};var startDate=today;var dates=GetDates();var aryDates=dates[0];var createChartObject=function createChartObject(){var chartFinalArray=[{id:dbDates[0],allTasks:0,doneTasks:0},{id:dbDates[1],allTasks:0,doneTasks:0},{id:dbDates[2],allTasks:0,doneTasks:0},{id:dbDates[3],allTasks:0,doneTasks:0},{id:dbDates[4],allTasks:0,doneTasks:0},{id:dbDates[5],allTasks:0,doneTasks:0},{id:dbDates[6],allTasks:0,doneTasks:0}];return chartFinalArray;};useEffect(function(){//function to download task from today.\nif(user!=undefined){db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate)//todayDate\n.orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){setTasks(snapshot.docs.map(function(doc){return{id:doc.id,task:doc.data()};}));});}},[user]);var dbDates=dates[1].reverse();var chartArray=[];useEffect(function(){//function to download task from today.\nif(user!=undefined){setChartDataExist(false);for(var i=0;i<=dbDates.length-1;i++){db.collection(user.displayName).doc(\"ToDoList\").collection(dbDates[i])//todayDate\n.orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){snapshot.docs.map(function(doc){chartArray.push({id:doc.id,data:doc.data()});setChartData(chartArray);});});}}},[tasks]);//need to change IT!!!\nvar useIsMount=function useIsMount(){//function to return, than first render or no\nvar isMountRef=useRef(true);useEffect(function(){isMountRef.current=false;},[]);return isMountRef.current;};var isMount=useIsMount();useEffect(function(){if(!isMount&&tasks.length>=1){var howManyTaskIsDone=0;for(var i=0;i<=tasks.length-1;i++){if(tasks[i].task.isDone==true){howManyTaskIsDone+=1;setTaskDone(howManyTaskIsDone);}}}},[tasks]);function hoverTest(){var chartFinalArray=[{id:dbDates[0],allTasks:0,doneTasks:0},{id:dbDates[1],allTasks:0,doneTasks:0},{id:dbDates[2],allTasks:0,doneTasks:0},{id:dbDates[3],allTasks:0,doneTasks:0},{id:dbDates[4],allTasks:0,doneTasks:0},{id:dbDates[5],allTasks:0,doneTasks:0},{id:dbDates[6],allTasks:0,doneTasks:0}];for(var i=0;i<=chartData.length-1;i++){if(chartData[i][\"data\"][\"timestamp\"]){var timestamp=new Date(chartData[i][\"data\"][\"timestamp\"][\"seconds\"]*1000);var date=String(timestamp.getDate()).padStart(2,'0')+\"_\"+String(timestamp.getMonth()+1).padStart(2,'0');}switch(date){case dbDates[1]:if(chartData[i]['data']['isDone']==true)chartFinalArray[1]['doneTasks']+=1;chartFinalArray[1]['allTasks']+=1;break;case dbDates[2]:if(chartData[i]['data']['isDone']==true)chartFinalArray[2]['doneTasks']+=1;chartFinalArray[2]['allTasks']+=1;break;case dbDates[3]:if(chartData[i]['data']['isDone']==true)chartFinalArray[3]['doneTasks']+=1;chartFinalArray[3]['allTasks']+=1;break;case dbDates[4]:if(chartData[i]['data']['isDone']==true)chartFinalArray[4]['doneTasks']+=1;chartFinalArray[4]['allTasks']+=1;break;case dbDates[5]:if(chartData[i]['data']['isDone']==true)chartFinalArray[5]['doneTasks']+=1;chartFinalArray[5]['allTasks']+=1;break;case dbDates[6]:if(chartData[i]['data']['isDone']==true)chartFinalArray[6]['doneTasks']+=1;chartFinalArray[6]['allTasks']+=1;break;}setChartDataExist(true);}var state={labels:[aryDates[0],aryDates[1],aryDates[2],aryDates[3],aryDates[4],aryDates[5],\"TODAY\"],datasets:[{label:\"Done tasks\",backgroundColor:\"#AC3B61\",borderColor:'rgba(0,0,0,1)',borderWidth:2,data:[[0,Math.round(chartFinalArray[6][\"doneTasks\"]/chartFinalArray[6][\"allTasks\"]*100)],[0,Math.round(chartFinalArray[5][\"doneTasks\"]/chartFinalArray[5][\"allTasks\"]*100)],[0,Math.round(chartFinalArray[4][\"doneTasks\"]/chartFinalArray[4][\"allTasks\"]*100)],[0,Math.round(chartFinalArray[3][\"doneTasks\"]/chartFinalArray[3][\"allTasks\"]*100)],[0,Math.round(chartFinalArray[2][\"doneTasks\"]/chartFinalArray[2][\"allTasks\"]*100)],[0,Math.round(chartFinalArray[1][\"doneTasks\"]/chartFinalArray[1][\"allTasks\"]*100)],[0,Math.round(doneTaskPercent)]]}]};return state;}return/*#__PURE__*/React.createElement(\"div\",{className:\"toDoChart__wrapper\"},/*#__PURE__*/React.createElement(\"div\",null,chartDataExist==true?/*#__PURE__*/React.createElement(Bar,{data:hoverTest,options:{title:{display:true,text:'Done task in %',fontSize:20},legend:{display:true,position:'right'}}}):/*#__PURE__*/React.createElement(\"button\",{className:\"toDoChart__button\",onClick:hoverTest},/*#__PURE__*/React.createElement(\"b\",null,\"CLICK HERE TO OPEN CHART!\"))));}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js"],"names":["React","useState","useEffect","useRef","db","Bar","ToDoList","user","tasks","setTasks","doneTasks","setTaskDone","doneTaskPercent","setPercent","chartData","setChartData","chartDataExist","setChartDataExist","today","Date","todayDate","String","getDate","padStart","getMonth","GetDates","aryDates","dbDates","i","currentDate","setDate","startDate","push","DayAsString","getDay","length","dayIndex","weekdays","Array","dates","createChartObject","chartFinalArray","id","allTasks","undefined","collection","displayName","doc","orderBy","onSnapshot","snapshot","docs","map","task","data","reverse","chartArray","useIsMount","isMountRef","current","isMount","howManyTaskIsDone","isDone","hoverTest","timestamp","date","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","Math","round","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef  } from 'react'\nimport './ToDoChart.css'\nimport { db } from '../../firebase.js'\nimport {Bar} from 'react-chartjs-2';\nexport default function ToDoList({user}) {\n    \n    const [tasks, setTasks] = useState([])\n    const [doneTasks, setTaskDone] = useState(0)\n    const [doneTaskPercent, setPercent] = useState(1)\n    const [chartData, setChartData] = useState([])\n    const [chartDataExist, setChartDataExist] = useState(false)\n\n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0'); \n\n\n    const GetDates = () => {\n      var aryDates = [];\n      var dbDates = [];\n      for (var i = -6; i <= 0; i++) {\n          var currentDate = new Date();\n          currentDate.setDate(startDate.getDate() + i);\n          aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n          dbDates.push(String(currentDate.getDate()).padStart(2, '0') + \"_\" + String(currentDate.getMonth() + 1).padStart(2, '0'));\n      }\n  \n      return [aryDates, dbDates];\n  }\n\n  useEffect(() =>{\n    setPercent(doneTasks/tasks.length*100)\n   \n   },\n   [tasks, doneTasks])\n\n  \n   const DayAsString = (dayIndex) => {\n      var weekdays = new Array(7);\n      weekdays[0] = \"Sunday\";\n      weekdays[1] = \"Monday\";\n      weekdays[2] = \"Tuesday\";\n      weekdays[3] = \"Wednesday\";\n      weekdays[4] = \"Thursday\";\n      weekdays[5] = \"Friday\";\n      weekdays[6] = \"Saturday\";\n  \n      return weekdays[dayIndex];\n  }\n  \n  var startDate = today; \n  const dates = GetDates()\n  var aryDates = dates[0]\n\n\n  const createChartObject = () => {\n    const chartFinalArray = [\n      {\n        id: dbDates[0],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[1],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[2],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[3],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[4],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[5],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[6],\n        allTasks: 0,\n        doneTasks:0\n      }\n    ]\n    return chartFinalArray\n    }\n\n  useEffect(() => {  //function to download task from today.\n    if(user!=undefined){   \n        db \n            .collection(user.displayName)\n            .doc(\"ToDoList\")\n            .collection(todayDate) //todayDate\n            .orderBy(\"timestamp\", \"desc\")\n            .onSnapshot((snapshot) =>{\n                setTasks(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    task: doc.data()\n                    })));\n                    }) \n        } \n   \n}, [user])\nconst dbDates = dates[1].reverse()\n\nconst chartArray = []\nuseEffect(() => {  //function to download task from today.\n  if(user!=undefined){\n    setChartDataExist(false) \n    for(let i=0; i<=dbDates.length-1; i++){\n      db \n          .collection(user.displayName)\n          .doc(\"ToDoList\")\n          .collection(dbDates[i]) //todayDate\n          .orderBy(\"timestamp\", \"desc\")\n          .onSnapshot((snapshot) =>{\n            ((snapshot.docs.map(doc => {\n              chartArray.push({id:doc.id, data: doc.data()})\n              setChartData(chartArray)\n              })));\n        })}}}, [tasks])  //need to change IT!!!\n\n\n\nconst useIsMount = () => { //function to return, than first render or no\n    const isMountRef = useRef(true);\n    useEffect(() => {\n      isMountRef.current = false;\n    }, []);\n    return isMountRef.current;\n  };\n\n\n    const isMount = useIsMount();\n  \n    useEffect(() => {\n      if (!isMount && tasks.length>=1) {\n        let howManyTaskIsDone = 0;\n\n        for(let i =0; i<=tasks.length-1; i++){\n             if(tasks[i].task.isDone == true){\n                howManyTaskIsDone+=1\n                setTaskDone(howManyTaskIsDone);\n                }\n        }\n\n      }\n    }, [tasks]);\n\n      function hoverTest(){\n        \n        var chartFinalArray = [\n          {\n            id: dbDates[0],\n            allTasks: 0,\n            doneTasks:0\n          },\n          {\n            id: dbDates[1],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[2],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[3],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[4],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[5],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[6],\n            allTasks: 0,\n            doneTasks: 0\n          }\n        ]\n        for(let i=0; i<=chartData.length-1; i++){\n          if(chartData[i][\"data\"][\"timestamp\"]){\n            var timestamp = new Date(chartData[i][\"data\"][\"timestamp\"][\"seconds\"]*1000)\n            var date = String(timestamp.getDate()).padStart(2, '0') + \"_\" + String(timestamp.getMonth() + 1).padStart(2, '0');\n          }\n          switch(date){\n              case dbDates[1]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[1]['doneTasks'] +=1\n                chartFinalArray[1]['allTasks']+=1\n                break;\n              case dbDates[2]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[2]['doneTasks'] +=1\n                chartFinalArray[2]['allTasks']+=1\n                break;\n              case dbDates[3]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[3]['doneTasks'] +=1\n                chartFinalArray[3]['allTasks']+=1\n                break;\n              case dbDates[4]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[4]['doneTasks'] +=1\n                chartFinalArray[4]['allTasks']+=1\n                break;\n              case dbDates[5]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[5]['doneTasks'] +=1\n                chartFinalArray[5]['allTasks']+=1\n                break;\n              case dbDates[6]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[6]['doneTasks'] +=1\n                chartFinalArray[6]['allTasks']+=1\n                break;\n            } setChartDataExist(true)\n            \n            } \n\n\n        \n        const state = {\n          labels: [aryDates[0], aryDates[1], aryDates[2],aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n          datasets: [\n            {\n              label: \"Done tasks\",\n              backgroundColor: \"#AC3B61\",\n              borderColor: 'rgba(0,0,0,1)',\n              borderWidth: 2,\n              data: [\n                [0,Math.round(chartFinalArray[6][\"doneTasks\"]/chartFinalArray[6][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[5][\"doneTasks\"]/chartFinalArray[5][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[4][\"doneTasks\"]/chartFinalArray[4][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[3][\"doneTasks\"]/chartFinalArray[3][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[2][\"doneTasks\"]/chartFinalArray[2][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[1][\"doneTasks\"]/chartFinalArray[1][\"allTasks\"]*100)],\n                [0,Math.round(doneTaskPercent)]] \n            }\n            \n          ]\n        }\n      \n      return state;\n    } \n    \n          \n    \n    return (\n    <div className=\"toDoChart__wrapper\">\n <div>\n        {\n          chartDataExist==true \n          ?<Bar \n          data={hoverTest}\n          options={{\n            title:{\n              display:true,\n              text:'Done task in %',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />:<button className=\"toDoChart__button\" onClick={hoverTest}><b>CLICK HERE TO OPEN CHART!</b></button>}\n      </div>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
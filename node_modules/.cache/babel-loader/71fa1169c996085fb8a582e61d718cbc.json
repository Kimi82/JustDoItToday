{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport './ToDoChart.css';\nimport { db } from '../../firebase.js';\nimport firebase from \"firebase\";\nimport { Bar } from 'react-chartjs-2';\nexport default function ToDoList({\n  user\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [doneTasks, setAsDone] = useState(0);\n  const [doneTaskPercent, setPercent] = useState(1);\n  const today = new Date();\n  const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n\n  const GetDates = () => {\n    var aryDates = [];\n    var dbDates = [];\n\n    for (var i = -6; i <= 0; i++) {\n      var currentDate = new Date();\n      currentDate.setDate(startDate.getDate() + i);\n      aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n      dbDates.push(String(currentDate.getDate()).padStart(2, '0') + \"_\" + String(currentDate.getMonth() + 1).padStart(2, '0'));\n    }\n\n    return [aryDates, dbDates];\n  };\n\n  useEffect(() => {\n    setPercent(doneTasks / tasks.length * 100);\n  }, [tasks, doneTasks]);\n\n  const DayAsString = dayIndex => {\n    var weekdays = new Array(7);\n    weekdays[0] = \"Sunday\";\n    weekdays[1] = \"Monday\";\n    weekdays[2] = \"Tuesday\";\n    weekdays[3] = \"Wednesday\";\n    weekdays[4] = \"Thursday\";\n    weekdays[5] = \"Friday\";\n    weekdays[6] = \"Saturday\";\n    return weekdays[dayIndex];\n  };\n\n  var startDate = today;\n  const dates = GetDates();\n  var aryDates = dates[0]; //function to return today + 6 past day\n\n  const state = {\n    labels: [aryDates[0], aryDates[1], aryDates[2], aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n    datasets: [{\n      label: 'Rainfall',\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: [[0, 100], [0, 60], [0, 40], [0, 30], [0, 70], [10, 60]]\n    }]\n  };\n  useEffect(() => {\n    //function to download task from today.\n    const dbDates = dates[1];\n\n    for (let i = 0; i <= dbDates.length - 1; i++) {\n      db.collection(\"Kimi\").doc(\"ToDoList\").collection(dbDates[i]) //todayDate\n      .orderBy(\"timestamp\", \"desc\").get().then(snapshot => {\n        console.log(snapshot.docs);\n      });\n    }\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toDoChart__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: 'Average Rainfall per month',\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js"],"names":["React","useState","useEffect","db","firebase","Bar","ToDoList","user","tasks","setTasks","doneTasks","setAsDone","doneTaskPercent","setPercent","today","Date","todayDate","String","getDate","padStart","getMonth","GetDates","aryDates","dbDates","i","currentDate","setDate","startDate","push","DayAsString","getDay","length","dayIndex","weekdays","Array","dates","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","collection","doc","orderBy","get","then","snapshot","console","log","docs","title","display","text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,SAAZ,IAAyBV,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACW,eAAD,EAAkBC,UAAlB,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMa,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,IAA2C,GAA3C,GAAiDF,MAAM,CAACH,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BD,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAnE;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAIC,WAAW,GAAG,IAAIV,IAAJ,EAAlB;AACAU,MAAAA,WAAW,CAACC,OAAZ,CAAoBC,SAAS,CAACT,OAAV,KAAsBM,CAA1C;AACAF,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAW,CAACJ,WAAW,CAACK,MAAZ,EAAD,CAAX,GAAoC,IAApC,GAA2CL,WAAW,CAACP,OAAZ,EAAzD;AACAK,MAAAA,OAAO,CAACK,IAAR,CAAaX,MAAM,CAACQ,WAAW,CAACP,OAAZ,EAAD,CAAN,CAA8BC,QAA9B,CAAuC,CAAvC,EAA0C,GAA1C,IAAiD,GAAjD,GAAuDF,MAAM,CAACQ,WAAW,CAACL,QAAZ,KAAyB,CAA1B,CAAN,CAAmCD,QAAnC,CAA4C,CAA5C,EAA+C,GAA/C,CAApE;AACH;;AAED,WAAO,CAACG,QAAD,EAAWC,OAAX,CAAP;AACH,GAXC;;AAaFrB,EAAAA,SAAS,CAAC,MAAK;AACbW,IAAAA,UAAU,CAACH,SAAS,GAACF,KAAK,CAACuB,MAAhB,GAAuB,GAAxB,CAAV;AAEA,GAHO,EAIR,CAACvB,KAAD,EAAQE,SAAR,CAJQ,CAAT;;AAOC,QAAMmB,WAAW,GAAIG,QAAD,IAAc;AAC/B,QAAIC,QAAQ,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAf;AACAD,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,QAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,QAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,SAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,WAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,UAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,QAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,UAAd;AAEA,WAAOA,QAAQ,CAACD,QAAD,CAAf;AACH,GAXA;;AAaD,MAAIL,SAAS,GAAGb,KAAhB;AACA,QAAMqB,KAAK,GAAGd,QAAQ,EAAtB;AACA,MAAIC,QAAQ,GAAGa,KAAK,CAAC,CAAD,CAApB,CA9CuC,CAgDzC;;AACA,QAAMC,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,CAACf,QAAQ,CAAC,CAAD,CAAT,EAAcA,QAAQ,CAAC,CAAD,CAAtB,EAA2BA,QAAQ,CAAC,CAAD,CAAnC,EAAuCA,QAAQ,CAAC,CAAD,CAA/C,EAAoDA,QAAQ,CAAC,CAAD,CAA5D,EAAiEA,QAAQ,CAAC,CAAD,CAAzE,EAA8E,OAA9E,CADI;AAEZgB,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,eAAe,EAAE,oBAFnB;AAGEC,MAAAA,WAAW,EAAE,eAHf;AAIEC,MAAAA,WAAW,EAAE,CAJf;AAKEC,MAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAG,GAAH,CAAD,EAAU,CAAC,CAAD,EAAG,EAAH,CAAV,EAAkB,CAAC,CAAD,EAAG,EAAH,CAAlB,EAA0B,CAAC,CAAD,EAAG,EAAH,CAA1B,EAAkC,CAAC,CAAD,EAAG,EAAH,CAAlC,EAA0C,CAAC,EAAD,EAAI,EAAJ,CAA1C;AALR,KADQ;AAFE,GAAd;AAcAzC,EAAAA,SAAS,CAAC,MAAM;AAAG;AACjB,UAAMqB,OAAO,GAAGY,KAAK,CAAC,CAAD,CAArB;;AACC,SAAI,IAAIX,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAED,OAAO,CAACQ,MAAR,GAAe,CAA/B,EAAkCP,CAAC,EAAnC,EAAsC;AACnCrB,MAAAA,EAAE,CACGyC,UADL,CACgB,MADhB,EAEKC,GAFL,CAES,UAFT,EAGKD,UAHL,CAGgBrB,OAAO,CAACC,CAAD,CAHvB,EAG4B;AAH5B,OAIKsB,OAJL,CAIa,WAJb,EAI0B,MAJ1B,EAKKC,GALL,GAMKC,IANL,CAMUC,QAAQ,IAAG;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,OARL;AASC;AAAC,GAZC,EAYC,CAAC7C,IAAD,CAZD,CAAT;AAeI,sBACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE6B,KADR;AAEE,IAAA,OAAO,EAAE;AACPiB,MAAAA,KAAK,EAAC;AACJC,QAAAA,OAAO,EAAC,IADJ;AAEJC,QAAAA,IAAI,EAAC,4BAFD;AAGJC,QAAAA,QAAQ,EAAC;AAHL,OADC;AAMPC,MAAAA,MAAM,EAAC;AACLH,QAAAA,OAAO,EAAC,IADH;AAELI,QAAAA,QAAQ,EAAC;AAFJ;AANA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,CADG,CADA;AAoBH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './ToDoChart.css'\nimport { db } from '../../firebase.js'\nimport firebase from \"firebase\"\nimport {Bar} from 'react-chartjs-2';\nexport default function ToDoList({user}) {\n    \n    const [tasks, setTasks] = useState([])\n    const [doneTasks, setAsDone] = useState(0)\n    const [doneTaskPercent, setPercent] = useState(1)\n\n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0'); \n\n\n\n    const GetDates = () => {\n      var aryDates = [];\n      var dbDates = [];\n      for (var i = -6; i <= 0; i++) {\n          var currentDate = new Date();\n          currentDate.setDate(startDate.getDate() + i);\n          aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n          dbDates.push(String(currentDate.getDate()).padStart(2, '0') + \"_\" + String(currentDate.getMonth() + 1).padStart(2, '0'));\n      }\n  \n      return [aryDates, dbDates];\n  }\n\n  useEffect(() =>{\n    setPercent(doneTasks/tasks.length*100)\n   \n   },\n   [tasks, doneTasks])\n\n  \n   const DayAsString = (dayIndex) => {\n      var weekdays = new Array(7);\n      weekdays[0] = \"Sunday\";\n      weekdays[1] = \"Monday\";\n      weekdays[2] = \"Tuesday\";\n      weekdays[3] = \"Wednesday\";\n      weekdays[4] = \"Thursday\";\n      weekdays[5] = \"Friday\";\n      weekdays[6] = \"Saturday\";\n  \n      return weekdays[dayIndex];\n  }\n  \n  var startDate = today; \n  const dates = GetDates()\n  var aryDates = dates[0]; \n\n//function to return today + 6 past day\nconst state = {\n  labels: [aryDates[0], aryDates[1], aryDates[2],aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n  datasets: [\n    {\n      label: 'Rainfall',\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: [[0,100], [0,60], [0,40], [0,30], [0,70], [10,60]] \n    }\n  ]\n}\n    \n    \nuseEffect(() => {  //function to download task from today.\n  const dbDates = dates[1]\n   for(let i=0; i<=dbDates.length-1; i++){\n      db \n          .collection(\"Kimi\")\n          .doc(\"ToDoList\")\n          .collection(dbDates[i]) //todayDate\n          .orderBy(\"timestamp\", \"desc\")\n          .get()\n          .then(snapshot =>{\n            console.log(snapshot.docs)\n          })\n      }}, [user])\n\n\n    return (\n    <div className=\"toDoChart__wrapper\">\n <div>\n        <Bar\n          data={state}\n          options={{\n            title:{\n              display:true,\n              text:'Average Rainfall per month',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />\n      </div>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
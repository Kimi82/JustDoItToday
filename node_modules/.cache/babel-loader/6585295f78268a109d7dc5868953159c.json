{"ast":null,"code":"import _slicedToArray from\"/Users/kamil/Desktop/Programowanie/ygo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,useLayoutEffect}from'react';import'./ToDoList.css';import{db}from'../../firebase.js';import firebase from\"firebase\";export default function ToDoList(_ref){var user=_ref.user;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newTaskValue=_useState2[0],setTask=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),doneTasks=_useState6[0],setTaskDone=_useState6[1];var today=new Date();var todayDate=String(today.getDate()).padStart(2,'0')+\"_\"+String(today.getMonth()+1).padStart(2,'0');var addTask=function addTask(e){//function to add task \ne.preventDefault();db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate).add({text:newTaskValue,timestamp:firebase.firestore.FieldValue.serverTimestamp(),isDone:false});setTask('');};useEffect(function(){//function to download task from today.\nif(user!=undefined){db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate)//todayDate\n.orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){setTasks(snapshot.docs.map(function(doc){return{id:doc.id,task:doc.data()};}));});}},[user]);var useIsMount=function useIsMount(){//function to return, than first render or no\nvar isMountRef=useRef(true);useEffect(function(){isMountRef.current=false;},[]);return isMountRef.current;};var isMount=useIsMount();useEffect(function(){if(!isMount&&tasks.length>=1){var howManyTaskIsDone=0;for(var i=0;i<=tasks.length-1;i++){if(tasks[i].task.isDone==true){howManyTaskIsDone+=1;setTaskDone(howManyTaskIsDone);}}}},[tasks]);var setAsDone=function setAsDone(e){db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate).doc(e.target.id).update({isDone:true});};return/*#__PURE__*/React.createElement(\"div\",{className:\"toDoList__wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"toDoList__list\"},/*#__PURE__*/React.createElement(\"ul\",null,tasks.map(function(task){return/*#__PURE__*/React.createElement(\"p\",null,\" \",task.task.isDone?/*#__PURE__*/React.createElement(\"li\",{className:\"toDoList__item\",value:task.task.text,id:task.id,onClick:setAsDone},task.task.text):/*#__PURE__*/React.createElement(\"li\",{value:task.task.text,id:task.id,onClick:setAsDone},task.task.text));})),/*#__PURE__*/React.createElement(\"div\",{className:\"toDoList__addTask\"},/*#__PURE__*/React.createElement(\"input\",{className:\"toDoList__input\",type:\"text\",value:newTaskValue,onChange:function onChange(e){return setTask(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{className:\"toDoList__button\",onClick:addTask},/*#__PURE__*/React.createElement(\"b\",null,\"ADD TASK\")))));}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_list/ToDoList.js"],"names":["React","useState","useEffect","useRef","useLayoutEffect","db","firebase","ToDoList","user","newTaskValue","setTask","tasks","setTasks","doneTasks","setTaskDone","today","Date","todayDate","String","getDate","padStart","getMonth","addTask","e","preventDefault","collection","displayName","doc","add","text","timestamp","firestore","FieldValue","serverTimestamp","isDone","undefined","orderBy","onSnapshot","snapshot","docs","map","id","task","data","useIsMount","isMountRef","current","isMount","length","howManyTaskIsDone","i","setAsDone","target","update","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useLayoutEffect} from 'react'\nimport './ToDoList.css'\nimport { db } from '../../firebase.js'\nimport firebase from \"firebase\"\n\nexport default function ToDoList({user}) {\n     const [newTaskValue, setTask] = useState(\"\");\n     const [tasks, setTasks] = useState([]);\n     const [doneTasks, setTaskDone] = useState()\n    \n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n\n\n\n    const addTask = (e) => {  //function to add task \n         e.preventDefault();\n         db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate).add({\n             text: newTaskValue,\n             timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n             isDone: false\n         })\n         setTask('');\n     }\n\n\n\n     \n\n    \n     useEffect(() => {  //function to download task from today.\n        if(user!=undefined){   \n            db \n                .collection(user.displayName)\n                .doc(\"ToDoList\")\n                .collection(todayDate) //todayDate\n                .orderBy(\"timestamp\", \"desc\")\n                .onSnapshot((snapshot) =>{\n                    setTasks(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        task: doc.data()\n                        })));\n                        }) \n            } \n       \n    }, [user])\n\n\n    const useIsMount = () => { //function to return, than first render or no\n        const isMountRef = useRef(true);\n        useEffect(() => {\n          isMountRef.current = false;\n        }, []);\n        return isMountRef.current;\n      };\n\n    \n        const isMount = useIsMount();\n      \n        useEffect(() => {\n          if (!isMount && tasks.length>=1) {\n            let howManyTaskIsDone = 0;\n            for(let i =0; i<=tasks.length-1; i++){\n                 if(tasks[i].task.isDone == true){\n                    howManyTaskIsDone+=1\n                    setTaskDone(howManyTaskIsDone);\n                    }\n            } \n          }\n        }, [tasks]);\n      \n\n\n    \n\n        \n\n    const setAsDone = (e) => {\n        db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate).doc(e.target.id)\n        .update({isDone: true})\n    }\n    \n\n    \n    return (\n    <div className=\"toDoList__wrapper\">\n    <div className=\"toDoList__list\">\n            <ul>\n            {tasks.map((task) => (\n                    <p> { task.task.isDone ?\n                        <li className=\"toDoList__item\" value={task.task.text} id={task.id} onClick={setAsDone}>{task.task.text}</li>:\n                        <li value={task.task.text} id={task.id} onClick={setAsDone}>{task.task.text}</li> \n                        }\n                    </p>\n                )\n                \n                )}\n            </ul>\n        \n        <div className=\"toDoList__addTask\">\n            <input className=\"toDoList__input\" type=\"text\" value={newTaskValue} onChange={e => setTask(e.target.value)}></input>\n            <button className=\"toDoList__button\" onClick={addTask}><b>ADD TASK</b></button>\n        </div>\n    </div>\n    </div>\n    )\n\n\n} "]},"metadata":{},"sourceType":"module"}
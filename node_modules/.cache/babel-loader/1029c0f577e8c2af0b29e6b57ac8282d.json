{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/ygo/src/components/journal/Journal.js\";\nimport React, { useState } from 'react';\nimport './Journal.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { db } from '../../firebase.js';\nimport firebase from \"firebase\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nexport default function Journal({\n  user\n}) {\n  const [noteValue, setNoteValue] = useState('');\n  const [noteAlert, setNoteAlert] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addNote = e => {\n    //function to add note \n    const today = new Date();\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n    e.preventDefault();\n    db.collection(user.displayName).doc(\"notes\").collection(todayDate).add({\n      text: noteValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setNoteValue('');\n  };\n\n  async function getNote(date) {\n    const dbDate = String(date.getDate()).padStart(2, '0') + \"_\" + String(date.getMonth() + 1).padStart(2, '0');\n    const task = db.collection(user.displayName).doc(\"notes\").collection(dbDate);\n    let taskData = await task.get();\n\n    if (typeof taskData.docs[0] == 'object') {\n      taskData = taskData.docs[0].data().text;\n      setNoteAlert(taskData);\n      setOpen(true);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"journal__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"journal__inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"journal__input\",\n    type: \"text\",\n    placeholder: \"My day was so productive...\",\n    value: noteValue,\n    onChange: e => setNoteValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"journal__inputButton\",\n    onClick: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 64\n    }\n  }, \"ADD NOTE\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"journal__chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Note: \"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, noteAlert)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Close\"))), /*#__PURE__*/React.createElement(Calendar, {\n    value: new Date(),\n    onChange: (value, event) => getNote(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/ygo/src/components/journal/Journal.js"],"names":["React","useState","Calendar","db","firebase","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Journal","user","noteValue","setNoteValue","noteAlert","setNoteAlert","open","setOpen","handleClose","addNote","e","today","Date","todayDate","String","getDate","padStart","getMonth","preventDefault","collection","displayName","doc","add","text","timestamp","firestore","FieldValue","serverTimestamp","getNote","date","dbDate","task","taskData","get","docs","data","target","value","event"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './Journal.css'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { db } from '../../firebase.js'\nimport firebase from \"firebase\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nexport default function Journal({user}) {\n\n  const [noteValue, setNoteValue] = useState('');\n  const [noteAlert, setNoteAlert] = useState('');\n  const [open, setOpen] = useState(false);\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addNote = (e) => {  //function to add note \n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n    e.preventDefault();\n    db.collection(user.displayName).doc(\"notes\").collection(todayDate).add({\n        text: noteValue,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    setNoteValue('');\n}\n\n  async function getNote(date){\n  const dbDate = String(date.getDate()).padStart(2, '0') + \"_\" + String(date.getMonth() + 1).padStart(2, '0'); \n    const task = db.collection(user.displayName).doc(\"notes\").collection(dbDate); \n    let taskData = await task.get()\n \n    if(typeof taskData.docs[0] == 'object'){\n    taskData = taskData.docs[0].data().text\n    setNoteAlert(taskData)\n    setOpen(true)\n    }\n}\n\n\n\n    return (\n    <div className=\"journal__wrapper\">\n        \n  <div className=\"journal__inputBox\">\n  \n\t  <textarea className=\"journal__input\" type=\"text\" placeholder=\"My day was so productive...\" value={noteValue} onChange={e => setNoteValue(e.target.value)}/>\n    <div>A</div>\n    <div>B</div>\n    <div>C</div>\n    <button className=\"journal__inputButton\" onClick={addNote}><b>ADD NOTE</b></button>\n  </div>\n        <div className=\"journal__chart\">\n          {\n    \n      <div>\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Note: \"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {noteAlert}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n        <Calendar\n          value={new Date()}\n          onChange={(value, event) => getNote(value)}\n        />\n      </div>\n    \n  }\n\n        </div>\n\n    </div>\n    )\n\n\n} "]},"metadata":{},"sourceType":"module"}
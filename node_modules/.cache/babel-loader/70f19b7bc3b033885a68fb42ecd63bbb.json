{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ToDoChart.css';\nimport { db } from '../../firebase.js';\nimport { Bar } from 'react-chartjs-2';\nexport default function ToDoList({\n  user\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [doneTasks, setTaskDone] = useState(0);\n  const [doneTaskPercent, setPercent] = useState(1);\n  const [chartData, setChartData] = useState([]);\n  const [chartDataExist, setChartDataExist] = useState(false);\n  const today = new Date();\n  const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n\n  const GetDates = () => {\n    var aryDates = [];\n    var dbDates = [];\n\n    for (var i = -6; i <= 0; i++) {\n      var currentDate = new Date();\n      currentDate.setDate(startDate.getDate() + i);\n      aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n      dbDates.push(String(currentDate.getDate()).padStart(2, '0') + \"_\" + String(currentDate.getMonth() + 1).padStart(2, '0'));\n    }\n\n    return [aryDates, dbDates];\n  };\n\n  useEffect(() => {\n    setPercent(doneTasks / tasks.length * 100);\n  }, [tasks, doneTasks]);\n\n  const DayAsString = dayIndex => {\n    var weekdays = new Array(7);\n    weekdays[0] = \"Sunday\";\n    weekdays[1] = \"Monday\";\n    weekdays[2] = \"Tuesday\";\n    weekdays[3] = \"Wednesday\";\n    weekdays[4] = \"Thursday\";\n    weekdays[5] = \"Friday\";\n    weekdays[6] = \"Saturday\";\n    return weekdays[dayIndex];\n  };\n\n  var startDate = today;\n  const dates = GetDates();\n  var aryDates = dates[0];\n\n  const createChartObject = () => {\n    const chartFinalArray = [{\n      id: dbDates[0],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[1],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[2],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[3],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[4],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[5],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[6],\n      allTasks: 0,\n      doneTasks: 0\n    }];\n    return chartFinalArray;\n  };\n\n  useEffect(() => {\n    //function to download task from today.\n    if (user != undefined) {\n      try {\n        db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate) //todayDate\n        .orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n          setTasks(snapshot.docs.map(doc => ({\n            id: doc.id,\n            task: doc.data()\n          })));\n        });\n      } catch (error) {\n        console.log(\"noway\");\n      }\n    }\n  }, []);\n  const dbDates = dates[1].reverse();\n  const chartArray = [];\n  useEffect(() => {\n    //function to download task from week.\n    if (user != undefined) {\n      for (let i = 0; i <= dbDates.length - 1; i++) {\n        try {\n          db.collection(user.displayName).doc(\"ToDoList\").collection(dbDates[i]) //todayDate\n          .orderBy(\"timestamp\", \"desc\").get().then(snapshot => {\n            snapshot.docs.map(async doc => {\n              chartArray.push({\n                id: doc.id,\n                data: doc.data()\n              });\n              await setChartData(chartArray);\n              setChartDataExist(true);\n            });\n          });\n        } catch {\n          console.log(\"no\");\n        }\n      }\n    }\n  }, []); //need to change IT!!!\n\n  const useIsMount = () => {\n    //function to return, than first render or no\n    const isMountRef = useRef(true);\n    useEffect(() => {\n      isMountRef.current = false;\n    }, []);\n    return isMountRef.current;\n  };\n\n  const isMount = useIsMount();\n  useEffect(() => {\n    if (!isMount && tasks.length >= 1) {\n      let howManyTaskIsDone = 0;\n\n      for (let i = 0; i <= tasks.length - 1; i++) {\n        if (tasks[i].task.isDone == true) {\n          howManyTaskIsDone += 1;\n          setTaskDone(howManyTaskIsDone);\n        }\n      }\n    }\n  }, [tasks]);\n\n  function hoverTest() {\n    var chartFinalArray = [{\n      id: dbDates[0],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[1],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[2],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[3],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[4],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[5],\n      allTasks: 0,\n      doneTasks: 0\n    }, {\n      id: dbDates[6],\n      allTasks: 0,\n      doneTasks: 0\n    }];\n\n    for (let i = 0; i <= chartData.length - 1; i++) {\n      if (chartData[i][\"data\"][\"timestamp\"]) {\n        var timestamp = new Date(chartData[i][\"data\"][\"timestamp\"][\"seconds\"] * 1000);\n        var date = String(timestamp.getDate()).padStart(2, '0') + \"_\" + String(timestamp.getMonth() + 1).padStart(2, '0');\n      }\n\n      switch (date) {\n        case dbDates[1]:\n          if (chartData[i]['data']['isDone'] == true) chartFinalArray[1]['doneTasks'] += 1;\n          chartFinalArray[1]['allTasks'] += 1;\n          break;\n\n        case dbDates[2]:\n          if (chartData[i]['data']['isDone'] == true) chartFinalArray[2]['doneTasks'] += 1;\n          chartFinalArray[2]['allTasks'] += 1;\n          break;\n\n        case dbDates[3]:\n          if (chartData[i]['data']['isDone'] == true) chartFinalArray[3]['doneTasks'] += 1;\n          chartFinalArray[3]['allTasks'] += 1;\n          break;\n\n        case dbDates[4]:\n          if (chartData[i]['data']['isDone'] == true) chartFinalArray[4]['doneTasks'] += 1;\n          chartFinalArray[4]['allTasks'] += 1;\n          break;\n\n        case dbDates[5]:\n          if (chartData[i]['data']['isDone'] == true) chartFinalArray[5]['doneTasks'] += 1;\n          chartFinalArray[5]['allTasks'] += 1;\n          break;\n\n        case dbDates[6]:\n          if (chartData[i]['data']['isDone'] == true) chartFinalArray[6]['doneTasks'] += 1;\n          chartFinalArray[6]['allTasks'] += 1;\n          break;\n      }\n\n      setChartDataExist(true);\n    }\n\n    const state = {\n      labels: [aryDates[0], aryDates[1], aryDates[2], aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n      datasets: [{\n        label: \"Done tasks\",\n        backgroundColor: \"#AC3B61\",\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [[0, Math.round(chartFinalArray[6][\"doneTasks\"] / chartFinalArray[6][\"allTasks\"] * 100)], [0, Math.round(chartFinalArray[5][\"doneTasks\"] / chartFinalArray[5][\"allTasks\"] * 100)], [0, Math.round(chartFinalArray[4][\"doneTasks\"] / chartFinalArray[4][\"allTasks\"] * 100)], [0, Math.round(chartFinalArray[3][\"doneTasks\"] / chartFinalArray[3][\"allTasks\"] * 100)], [0, Math.round(chartFinalArray[2][\"doneTasks\"] / chartFinalArray[2][\"allTasks\"] * 100)], [0, Math.round(chartFinalArray[1][\"doneTasks\"] / chartFinalArray[1][\"allTasks\"] * 100)], [0, Math.round(doneTaskPercent)]]\n      }]\n    };\n    return state;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toDoChart__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, user.displayName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 2\n    }\n  }, chartDataExist == true ? /*#__PURE__*/React.createElement(Bar, {\n    data: hoverTest,\n    options: {\n      title: {\n        display: true,\n        text: 'Done task in %',\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 12\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"toDoChart__button\",\n    onClick: hoverTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 70\n    }\n  }, \"CLICK HERE TO OPEN CHART!\"))) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 2\n    }\n  }, \"Please refresh the page\"));\n}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js"],"names":["React","useState","useEffect","useRef","db","Bar","ToDoList","user","tasks","setTasks","doneTasks","setTaskDone","doneTaskPercent","setPercent","chartData","setChartData","chartDataExist","setChartDataExist","today","Date","todayDate","String","getDate","padStart","getMonth","GetDates","aryDates","dbDates","i","currentDate","setDate","startDate","push","DayAsString","getDay","length","dayIndex","weekdays","Array","dates","createChartObject","chartFinalArray","id","allTasks","undefined","collection","displayName","doc","orderBy","onSnapshot","snapshot","docs","map","task","data","error","console","log","reverse","chartArray","get","then","useIsMount","isMountRef","current","isMount","howManyTaskIsDone","isDone","hoverTest","timestamp","date","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","Math","round","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef  } from 'react'\nimport './ToDoChart.css'\nimport { db } from '../../firebase.js'\nimport {Bar} from 'react-chartjs-2';\nexport default function ToDoList({user}) {\n    \n    const [tasks, setTasks] = useState([])\n    const [doneTasks, setTaskDone] = useState(0)\n    const [doneTaskPercent, setPercent] = useState(1)\n    const [chartData, setChartData] = useState([])\n    const [chartDataExist, setChartDataExist] = useState(false)\n\n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0'); \n\n\n    const GetDates = () => {\n      var aryDates = [];\n      var dbDates = [];\n      for (var i = -6; i <= 0; i++) {\n          var currentDate = new Date();\n          currentDate.setDate(startDate.getDate() + i);\n          aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n          dbDates.push(String(currentDate.getDate()).padStart(2, '0') + \"_\" + String(currentDate.getMonth() + 1).padStart(2, '0'));\n      }\n  \n      return [aryDates, dbDates];\n  }\n\n  useEffect(() =>{\n    setPercent(doneTasks/tasks.length*100)\n   \n   },\n   [tasks, doneTasks])\n\n  \n   const DayAsString = (dayIndex) => {\n      var weekdays = new Array(7);\n      weekdays[0] = \"Sunday\";\n      weekdays[1] = \"Monday\";\n      weekdays[2] = \"Tuesday\";\n      weekdays[3] = \"Wednesday\";\n      weekdays[4] = \"Thursday\";\n      weekdays[5] = \"Friday\";\n      weekdays[6] = \"Saturday\";\n  \n      return weekdays[dayIndex];\n  }\n  \n  var startDate = today; \n  const dates = GetDates()\n  var aryDates = dates[0]\n\n\n  const createChartObject = () => {\n    const chartFinalArray = [\n      {\n        id: dbDates[0],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[1],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[2],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[3],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[4],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[5],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[6],\n        allTasks: 0,\n        doneTasks:0\n      }\n    ]\n    return chartFinalArray\n    }\n\n  useEffect(() => {  //function to download task from today.\n    if(user!=undefined){  \n      try{ \n        db \n            .collection(user.displayName)\n            .doc(\"ToDoList\")\n            .collection(todayDate) //todayDate\n            .orderBy(\"timestamp\", \"desc\")\n            .onSnapshot((snapshot) =>{\n                setTasks(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    task: doc.data()\n                    })));\n                    }) \n        }catch(error){console.log(\"noway\")}} \n   \n}, [])\nconst dbDates = dates[1].reverse()\nconst chartArray = []\n\nuseEffect(() => {  //function to download task from week.\n  if(user!=undefined){\n    for(let i=0; i<=dbDates.length-1; i++){\n      try{\n         db \n          .collection(user.displayName)\n          .doc(\"ToDoList\")\n          .collection(dbDates[i]) //todayDate\n          .orderBy(\"timestamp\", \"desc\")\n          .get()\n          .then(snapshot =>{\n            ((snapshot.docs.map(async doc => {\n                  chartArray.push({id:doc.id, data: doc.data()})\n                  await setChartData(chartArray)\n                  setChartDataExist(true)\n                  })));\n                  \n                })\n\n        }catch{console.log(\"no\")}}}}, [])  //need to change IT!!!\n\n\n\nconst useIsMount = () => { //function to return, than first render or no\n    const isMountRef = useRef(true);\n    useEffect(() => {\n      isMountRef.current = false;\n    }, []);\n    return isMountRef.current;\n  };\n\n\n    const isMount = useIsMount();\n  \n    useEffect(() => {\n      if (!isMount && tasks.length>=1) {\n        let howManyTaskIsDone = 0;\n\n        for(let i =0; i<=tasks.length-1; i++){\n             if(tasks[i].task.isDone == true){\n                howManyTaskIsDone+=1\n                setTaskDone(howManyTaskIsDone);\n                }\n        }\n\n      }\n    }, [tasks]);\n\n      function hoverTest(){\n        \n        var chartFinalArray = [\n          {\n            id: dbDates[0],\n            allTasks: 0,\n            doneTasks:0\n          },\n          {\n            id: dbDates[1],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[2],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[3],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[4],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[5],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[6],\n            allTasks: 0,\n            doneTasks: 0\n          }\n        ]\n        for(let i=0; i<=chartData.length-1; i++){\n          if(chartData[i][\"data\"][\"timestamp\"]){\n            var timestamp = new Date(chartData[i][\"data\"][\"timestamp\"][\"seconds\"]*1000)\n            var date = String(timestamp.getDate()).padStart(2, '0') + \"_\" + String(timestamp.getMonth() + 1).padStart(2, '0');\n          }\n          switch(date){\n              case dbDates[1]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[1]['doneTasks'] +=1\n                chartFinalArray[1]['allTasks']+=1\n                break;\n              case dbDates[2]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[2]['doneTasks'] +=1\n                chartFinalArray[2]['allTasks']+=1\n                break;\n              case dbDates[3]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[3]['doneTasks'] +=1\n                chartFinalArray[3]['allTasks']+=1\n                break;\n              case dbDates[4]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[4]['doneTasks'] +=1\n                chartFinalArray[4]['allTasks']+=1\n                break;\n              case dbDates[5]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[5]['doneTasks'] +=1\n                chartFinalArray[5]['allTasks']+=1\n                break;\n              case dbDates[6]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[6]['doneTasks'] +=1\n                chartFinalArray[6]['allTasks']+=1\n                break;\n            } setChartDataExist(true)\n            \n            } \n\n\n        \n        const state = {\n          labels: [aryDates[0], aryDates[1], aryDates[2],aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n          datasets: [\n            {\n              label: \"Done tasks\",\n              backgroundColor: \"#AC3B61\",\n              borderColor: 'rgba(0,0,0,1)',\n              borderWidth: 2,\n              data: [\n                [0,Math.round(chartFinalArray[6][\"doneTasks\"]/chartFinalArray[6][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[5][\"doneTasks\"]/chartFinalArray[5][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[4][\"doneTasks\"]/chartFinalArray[4][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[3][\"doneTasks\"]/chartFinalArray[3][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[2][\"doneTasks\"]/chartFinalArray[2][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[1][\"doneTasks\"]/chartFinalArray[1][\"allTasks\"]*100)],\n                [0,Math.round(doneTaskPercent)]] \n            }\n            \n          ]\n        }\n      \n      return state;\n    } \n    \n          \n    \n    return (\n    <div className=\"toDoChart__wrapper\">{ user.displayName?\n <div>\n        {\n          chartDataExist==true \n          ?<Bar \n          data={hoverTest}\n          options={{\n            title:{\n              display:true,\n              text:'Done task in %',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />:<button className=\"toDoChart__button\" onClick={hoverTest}><b>CLICK HERE TO OPEN CHART!</b></button>}\n      </div>\n:<h1>Please refresh the page</h1>}</div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
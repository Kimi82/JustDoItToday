{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport './ToDoChart.css';\nimport { db } from '../../firebase.js';\nimport firebase from \"firebase\";\nimport { Bar } from 'react-chartjs-2';\nimport { zmienna } from '../todo_list/ToDoList';\nconsole.log(doneTaskPercent);\nexport default function ToDoList({\n  user\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [doneTasks, setAsDone] = useState(0);\n  const today = new Date();\n  const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n\n  const GetDates = () => {\n    var aryDates = [];\n\n    for (var i = -6; i <= 0; i++) {\n      var currentDate = new Date();\n      currentDate.setDate(startDate.getDate() + i);\n      aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n    }\n\n    return aryDates;\n  };\n\n  const DayAsString = dayIndex => {\n    var weekdays = new Array(7);\n    weekdays[0] = \"Sunday\";\n    weekdays[1] = \"Monday\";\n    weekdays[2] = \"Tuesday\";\n    weekdays[3] = \"Wednesday\";\n    weekdays[4] = \"Thursday\";\n    weekdays[5] = \"Friday\";\n    weekdays[6] = \"Saturday\";\n    return weekdays[dayIndex];\n  };\n\n  var startDate = today;\n  var aryDates = GetDates(); //function to return today + 6 past day\n\n  const state = {\n    labels: [aryDates[0], aryDates[1], aryDates[2], aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n    datasets: [{\n      label: 'Rainfall',\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: [[0, 100], [0, 60], [0, 40], [0, 30], [0, 70], [10, 60]]\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toDoChart__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: 'Average Rainfall per month',\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/ygo/src/components/todo_chart/ToDoChart.js"],"names":["React","useState","useEffect","db","firebase","Bar","zmienna","console","log","doneTaskPercent","ToDoList","user","tasks","setTasks","doneTasks","setAsDone","today","Date","todayDate","String","getDate","padStart","getMonth","GetDates","aryDates","i","currentDate","setDate","startDate","push","DayAsString","getDay","dayIndex","weekdays","Array","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './ToDoChart.css'\nimport { db } from '../../firebase.js'\nimport firebase from \"firebase\"\nimport {Bar} from 'react-chartjs-2';\nimport { zmienna } from '../todo_list/ToDoList' \nconsole.log(doneTaskPercent)\nexport default function ToDoList({user}) {\n    \n    const [tasks, setTasks] = useState([])\n    const [doneTasks, setAsDone] = useState(0)\n\n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0'); \n\n\n\n    const GetDates = () => {\n      var aryDates = [];\n  \n      for (var i = -6; i <= 0; i++) {\n          var currentDate = new Date();\n          currentDate.setDate(startDate.getDate() + i);\n          aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n      }\n  \n      return aryDates;\n  }\n  \n   const DayAsString = (dayIndex) => {\n      var weekdays = new Array(7);\n      weekdays[0] = \"Sunday\";\n      weekdays[1] = \"Monday\";\n      weekdays[2] = \"Tuesday\";\n      weekdays[3] = \"Wednesday\";\n      weekdays[4] = \"Thursday\";\n      weekdays[5] = \"Friday\";\n      weekdays[6] = \"Saturday\";\n  \n      return weekdays[dayIndex];\n  }\n  \n  var startDate = today; \n  var aryDates = GetDates(); \n\n//function to return today + 6 past day\nconst state = {\n  labels: [aryDates[0], aryDates[1], aryDates[2],aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n  datasets: [\n    {\n      label: 'Rainfall',\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: [[0,100], [0,60], [0,40], [0,30], [0,70], [10,60]] \n    }\n  ]\n}\n    \n    \n    return (\n    <div className=\"toDoChart__wrapper\">\n <div>\n        <Bar\n          data={state}\n          options={{\n            title:{\n              display:true,\n              text:'Average Rainfall per month',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />\n      </div>\n    </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
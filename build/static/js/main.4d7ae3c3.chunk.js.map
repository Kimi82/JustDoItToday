{"version":3,"sources":["firebase.js","components/todo_list/ToDoList.js","components/todo_chart/ToDoChart.js","components/journal/Journal.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","ToDoList","user","useState","newTaskValue","setTask","tasks","setTasks","setTaskDone","today","Date","todayDate","String","getDate","padStart","getMonth","useEffect","undefined","collection","displayName","doc","orderBy","onSnapshot","snapshot","docs","map","id","task","data","console","log","isMount","isMountRef","useRef","current","useIsMount","length","howManyTaskIsDone","i","isDone","setAsDone","e","target","update","className","onClick","type","defaultChecked","htmlFor","text","value","onChange","preventDefault","add","timestamp","FieldValue","serverTimestamp","doneTasks","doneTaskPercent","setPercent","chartData","setChartData","chartDataExist","setChartDataExist","DayAsString","dayIndex","weekdays","Array","startDate","dates","aryDates","dbDates","currentDate","setDate","push","getDay","GetDates","error","reverse","chartArray","get","then","a","setTimeout","chartFinalArray","allTasks","date","labels","datasets","label","backgroundColor","borderColor","borderWidth","Math","round","options","title","display","fontSize","legend","position","Journal","noteValue","setNoteValue","noteAlert","setNoteAlert","open","setOpen","mood","setMood","handleClose","handleMood","dbDate","taskData","taskText","taskMood","inputButtonClass","inputButtonText","placeholder","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","getNote","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","width","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","email","setEmail","password","setPassword","setUser","openSignIn","setOpenSignIn","username","setUsername","onAuthStateChanged","authUser","signUp","createUserWithEmailAndPassword","window","location","reload","currentUser","updateProfile","alert","message","signOut","Modal","style","Input","signInWithEmailAndPassword","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d7ae3c3.chunk.js","sourcesContent":["\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp ({\n    apiKey: \"AIzaSyAKc0P8Qxfpb7ClHcfvNdV9p_1kMvp5Vok\",\n    authDomain: \"justdoittoday-37593.firebaseapp.com\",\n    databaseURL: \"https://justdoittoday-37593.firebaseio.com\",\n    projectId: \"justdoittoday-37593\",\n    storageBucket: \"justdoittoday-37593.appspot.com\",\n    messagingSenderId: \"1071762001364\",\n    appId: \"1:1071762001364:web:ab9dc6735e67d664eada41\",\n    measurementId: \"G-G511QE1H4X\"\n  });\n\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const storage = firebase.storage();\n  \n  export {db, auth, storage};\n  \n//   login(email, password){\n//     return this.auth.signInWithEmailAndPassword(email, password)\n//   }\n//   logout(){\n//     return this.auth.signOut()\n//   }\n//   async register(name, email, password){\n//     await this.auth.createUserWithEmailAndPassword(email, password)\n//     return this.auth.currentUser.updateProfile({\n//       displayName: name\n//     })\n//   }\n// }\n\n","import React, { useState, useEffect, useRef, useLayoutEffect} from 'react'\nimport './ToDoList.css'\nimport { db } from '../../firebase.js'\nimport firebase from \"firebase\"\n\nexport default function ToDoList({user}) {\n     const [newTaskValue, setTask] = useState(\"\");\n     const [tasks, setTasks] = useState([]);\n     const [doneTasks, setTaskDone] = useState()\n    \n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n\n\n\n    const addTask = (e) => {  //function to add task \n         e.preventDefault();\n         db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate).add({\n             text: newTaskValue,\n             timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n             isDone: false\n         })\n         setTask('');\n     }\n\n    \n     useEffect(() => {  //function to download task from today.\n        if(user!=undefined){\n            try{   \n            db \n                .collection(user.displayName)\n                .doc(\"ToDoList\")\n                .collection(todayDate) //todayDate\n                .orderBy(\"timestamp\", \"desc\")\n                .onSnapshot((snapshot) =>{\n                    setTasks(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        task: doc.data()\n                        })));\n                        }) \n            }catch{console.log(\"o nie \")}} \n       \n    }, [])\n\n\n    const useIsMount = () => { //function to return, than first render or no\n        const isMountRef = useRef(true);\n        useEffect(() => {\n          isMountRef.current = false;\n        }, []);\n        return isMountRef.current;\n      };\n\n    \n        const isMount = useIsMount();\n      \n        useEffect(() => {\n          if (!isMount && tasks.length>=1) {\n            let howManyTaskIsDone = 0;\n            for(let i =0; i<=tasks.length-1; i++){\n                 if(tasks[i].task.isDone === true){\n                    howManyTaskIsDone+=1\n                    setTaskDone(howManyTaskIsDone);\n                    }\n            } \n          }\n        }, [tasks]);\n      \n\n\n    \n\n        \n\n    const setAsDone = (e) => {\n         db.collection(user.displayName).doc(\"ToDoList\").collection(todayDate).doc(e.target.id)\n         .update({isDone: true})\n    }\n    \n\n    \n    return (\n    <div className=\"toDoList__wrapper\">{ user.displayName?\n    <div className=\"toDoList__list\">\n             \n            {tasks.map((task) => (\n                    <span> \n\n                    { task.task.isDone ?\n                    <div className=\"boxes\" id={task.id} onClick={setAsDone} >\n                        <input type=\"checkbox\" id={task.id} onClick={setAsDone} defaultChecked />\n                        <label id={task.id} htmlFor={task.id} onClick={setAsDone}>{task.task.text}</label> \n                    </div>\n                    :\n                    <div className=\"boxes\" id={task.id} onClick={setAsDone} >\n                        <input type=\"checkbox\" id={task.id} onClick={setAsDone} />\n                        <label id={task.id} htmlFor={task.id} onClick={setAsDone}>{task.task.text}</label> \n                    </div>\n\n                        } \n                       \n                    \n\n                        \n                    </span>\n                )\n                \n                )}\n            \n        \n        <div className=\"toDoList__addTask\">\n            <input className=\"toDoList__input\" type=\"text\" value={newTaskValue} onChange={e => setTask(e.target.value)}></input>\n            <button className=\"toDoList__button\" onClick={addTask}><b>ADD TASK</b></button>\n        </div>\n    </div>\n:<h1>Please refresh the page</h1>}</div>\n    )\n\n\n} ","import React, { useState, useEffect, useRef  } from 'react'\nimport './ToDoChart.css'\nimport { db } from '../../firebase.js'\nimport {Bar} from 'react-chartjs-2';\nexport default function ToDoList({user}) {\n    \n    const [tasks, setTasks] = useState([])\n    const [doneTasks, setTaskDone] = useState(0)\n    const [doneTaskPercent, setPercent] = useState(1)\n    const [chartData, setChartData] = useState([])\n    const [chartDataExist, setChartDataExist] = useState(false)\n\n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0'); \n\n\n    const GetDates = () => {\n      var aryDates = [];\n      var dbDates = [];\n      for (var i = -6; i <= 0; i++) {\n          var currentDate = new Date();\n          currentDate.setDate(startDate.getDate() + i);\n          aryDates.push(DayAsString(currentDate.getDay()) + \", \" + currentDate.getDate());\n          dbDates.push(String(currentDate.getDate()).padStart(2, '0') + \"_\" + String(currentDate.getMonth() + 1).padStart(2, '0'));\n      }\n  \n      return [aryDates, dbDates];\n  }\n\n  useEffect(() =>{\n    setPercent(doneTasks/tasks.length*100)\n   \n   },\n   [tasks, doneTasks])\n\n  \n   const DayAsString = (dayIndex) => {\n      var weekdays = new Array(7);\n      weekdays[0] = \"Sunday\";\n      weekdays[1] = \"Monday\";\n      weekdays[2] = \"Tuesday\";\n      weekdays[3] = \"Wednesday\";\n      weekdays[4] = \"Thursday\";\n      weekdays[5] = \"Friday\";\n      weekdays[6] = \"Saturday\";\n  \n      return weekdays[dayIndex];\n  }\n  \n  var startDate = today; \n  const dates = GetDates()\n  var aryDates = dates[0]\n\n\n  const createChartObject = () => {\n    const chartFinalArray = [\n      {\n        id: dbDates[0],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[1],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[2],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[3],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[4],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[5],\n        allTasks: 0,\n        doneTasks:0\n      },\n      {\n        id: dbDates[6],\n        allTasks: 0,\n        doneTasks:0\n      }\n    ]\n    return chartFinalArray\n    }\n\n  useEffect(() => {  //function to download task from today.\n    if(user!=undefined){  \n      try{ \n        db \n            .collection(user.displayName)\n            .doc(\"ToDoList\")\n            .collection(todayDate) //todayDate\n            .orderBy(\"timestamp\", \"desc\")\n            .onSnapshot((snapshot) =>{\n                setTasks(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    task: doc.data()\n                    })));\n                    }) \n        }catch(error){console.log(\"noway\")}} \n   \n}, [])\nconst dbDates = dates[1].reverse()\nconst chartArray = []\n\nuseEffect(() => {  //function to download task from week.\n  if(user!=undefined){\n    for(let i=0; i<=dbDates.length-1; i++){\n      try{\n         db \n          .collection(user.displayName)\n          .doc(\"ToDoList\")\n          .collection(dbDates[i]) //todayDate\n          .orderBy(\"timestamp\", \"desc\")\n          .get()\n          .then(snapshot =>{\n            ((snapshot.docs.map(async doc => {\n                  chartArray.push({id:doc.id, data: doc.data()})\n                  setChartData(chartArray)\n                  })));\n                  \n                })\n\n        }catch{console.log(\"no\")}}}}, [])  //need to change IT!!!\n\n\n\nconst useIsMount = () => { //function to return, than first render or no\n    const isMountRef = useRef(true);\n    useEffect(() => {\n      isMountRef.current = false;\n    }, []);\n    return isMountRef.current;\n  };\n\n\n    const isMount = useIsMount();\n  \n    useEffect(() => {\n      if (!isMount && tasks.length>=1) {\n        let howManyTaskIsDone = 0;\n\n        for(let i =0; i<=tasks.length-1; i++){\n             if(tasks[i].task.isDone == true){\n                howManyTaskIsDone+=1\n                setTaskDone(howManyTaskIsDone);\n                }\n        }\n\n      }\n    }, [tasks]);\n\n      function hoverTest(){\n        \n        var chartFinalArray = [\n          {\n            id: dbDates[0],\n            allTasks: 0,\n            doneTasks:0\n          },\n          {\n            id: dbDates[1],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[2],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[3],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[4],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[5],\n            allTasks: 0,\n            doneTasks: 0\n          },\n          {\n            id: dbDates[6],\n            allTasks: 0,\n            doneTasks: 0\n          }\n        ]\n        for(let i=0; i<=chartData.length-1; i++){\n          if(chartData[i][\"data\"][\"timestamp\"]){\n            var timestamp = new Date(chartData[i][\"data\"][\"timestamp\"][\"seconds\"]*1000)\n            var date = String(timestamp.getDate()).padStart(2, '0') + \"_\" + String(timestamp.getMonth() + 1).padStart(2, '0');\n          }\n          switch(date){\n              case dbDates[1]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[1]['doneTasks'] +=1\n                chartFinalArray[1]['allTasks']+=1\n                break;\n              case dbDates[2]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[2]['doneTasks'] +=1\n                chartFinalArray[2]['allTasks']+=1\n                break;\n              case dbDates[3]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[3]['doneTasks'] +=1\n                chartFinalArray[3]['allTasks']+=1\n                break;\n              case dbDates[4]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[4]['doneTasks'] +=1\n                chartFinalArray[4]['allTasks']+=1\n                break;\n              case dbDates[5]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[5]['doneTasks'] +=1\n                chartFinalArray[5]['allTasks']+=1\n                break;\n              case dbDates[6]:\n                if (chartData[i]['data']['isDone'] == true) chartFinalArray[6]['doneTasks'] +=1\n                chartFinalArray[6]['allTasks']+=1\n                break;\n            } setChartDataExist(true)\n            \n            } \n\n\n        \n        const state = {\n          labels: [aryDates[0], aryDates[1], aryDates[2],aryDates[3], aryDates[4], aryDates[5], \"TODAY\"],\n          datasets: [\n            {\n              label: \"Done tasks\",\n              backgroundColor: \"#AC3B61\",\n              borderColor: 'rgba(0,0,0,1)',\n              borderWidth: 2,\n              data: [\n                [0,Math.round(chartFinalArray[6][\"doneTasks\"]/chartFinalArray[6][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[5][\"doneTasks\"]/chartFinalArray[5][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[4][\"doneTasks\"]/chartFinalArray[4][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[3][\"doneTasks\"]/chartFinalArray[3][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[2][\"doneTasks\"]/chartFinalArray[2][\"allTasks\"]*100)],\n                [0,Math.round(chartFinalArray[1][\"doneTasks\"]/chartFinalArray[1][\"allTasks\"]*100)],\n                [0,Math.round(doneTaskPercent)]] \n            }\n            \n          ]\n        }\n      \n      return state;\n    } \n    \n\n    setTimeout( () => {\n      setChartDataExist(true)\n    },2000)\n          \n    \n    return (\n    <div className=\"toDoChart__wrapper\">{ user.displayName?\n <div>\n        {\n          chartDataExist==true \n          ?<Bar \n          data={hoverTest}\n          options={{\n            title:{\n              display:true,\n              text:'Done task in %',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />:<div className=\"loader\">\n        <div className=\"loader-wheel\"></div>\n        <div className=\"loader-text\"></div>\n      </div>\n      }\n      </div>\n:<h1>Please refresh the page</h1>}</div>\n    )\n}\n","import React, {useState} from 'react'\nimport './Journal.css'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { db } from '../../firebase.js'\nimport firebase from \"firebase\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nexport default function Journal({user}) {\n\n  const [noteValue, setNoteValue] = useState('');\n  const [noteAlert, setNoteAlert] = useState('');\n  const [open, setOpen] = useState(false);\n  const [mood, setMood] = useState('');\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMood = e => {\n    setMood(e.target.value)\n  };\n  const addNote = (e) => {  //function to add note \n    const today = new Date()\n    const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');\n    e.preventDefault();\n    db.collection(user.displayName).doc(\"notes\").collection(todayDate).add({\n        text: noteValue,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        mood: mood\n    })\n    setNoteValue('');\n}\n\n  async function getNote(date){\n  const dbDate = String(date.getDate()).padStart(2, '0') + \"_\" + String(date.getMonth() + 1).padStart(2, '0'); \n    const task = db.collection(user.displayName).doc(\"notes\").collection(dbDate); \n    let taskData = await task.get()\n \n    if(typeof taskData.docs[0] == 'object'){\n    let taskText = taskData.docs[0].data().text\n    let taskMood = taskData.docs[0].data().mood\n    setNoteAlert(taskText +\" Your mood: \" + taskMood)\n    setOpen(true)\n    }\n}\n\nif(mood.length===0){\n  var inputButtonClass = \"journal__inputButtonDisable\"\n  var inputButtonText = \"FIRST, PICK YOUR MOOD\"\n}else{\n  var inputButtonClass = \"journal__inputButton\"\n  var inputButtonText = \"ADD NOTE\"\n}\n\n    return (\n    <div className=\"journal__wrapper\">\n        \n  <div className=\"journal__inputBox\">\n  \n\t  <textarea className=\"journal__input\" type=\"text\" placeholder=\"My day was so productive...\" value={noteValue} onChange={e => setNoteValue(e.target.value)}/>\n    <div className=\"journal__inputButtonWrapper\">\n    <button className=\"journal__inputButtonGood\" value={'🙂'} onClick={handleMood}>🙂</button>\n    <button className=\"journal__inputButtonNormal\" value={'😐'} onClick={handleMood}>😐</button>\n    <button className=\"journal__inputButtonBad\" value={'🙁'} onClick={handleMood}>🙁</button>\n    </div>\n    \n    \n    <button className={inputButtonClass} onClick={addNote}><b>{inputButtonText}</b></button>\n    \n    </div>\n        <div className=\"journal__chart\">\n          {\n    \n      <div>\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Note: \"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {noteAlert}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n        <Calendar\n          value={new Date()}\n          onChange={(value) => getNote(value)}\n        />\n      </div>\n    \n  }\n\n        </div>\n\n    </div>\n    )\n\n\n} ","import './App.css';\nimport './components/todo_list/ToDoList.css';\nimport './Navigation.css';\nimport ToDoList from './components/todo_list/ToDoList';\nimport ToDoChart from './components/todo_chart/ToDoChart';\nimport Journal from './components/journal/Journal';\nimport Settings from './components/Settings/Settings';\nimport React, {useState ,useEffect, useRef} from 'react';\nimport { db, auth } from './firebase.js' \nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core'\n\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst  useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null)\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState('')\n  const [username, setUsername] = useState('');\n\n \n\n  const today = new Date()\n  const todayDate = String(today.getDate()).padStart(2, '0') + \"_\" + String(today.getMonth() + 1).padStart(2, '0');  \n\n  useEffect(() => {\n  \n    (async function checkLogin() {\n      await auth.onAuthStateChanged((authUser)=>{ \n        setUser( authUser);})\n    })();\n  }, [user, username]);\n\n  \n\n  const signUp = async (e) =>{\n    e.preventDefault();\n    try{\n    await auth.createUserWithEmailAndPassword(email, password)\n    setOpen(false)\n    window.location.reload();\n    return await auth.currentUser.updateProfile({\n      displayName: username\n    \n    })\n    \n     }\n    catch(error){\n      alert(error.message)\n    }\n    \n\n  }\n  \n  const signIn = (e) => {\n    auth\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => alert(error.message))\n    setOpenSignIn(false)\n  }\n\n\n\n\n return (\n  <div className=\"app\">\n\n <header className=\"navigation__header\">\n   \n    <h1>Hi, {user?.displayName}<br/> Have a great day!</h1>\n    <div>\n    \n    {user?.displayName ? \n    <Button onClick={() =>{\n       auth.signOut();\n       window.location.reload(false)}}>Logout</Button>\n       : \n      <div className=\"navigation__loginWrapper\">\n        \n      <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n      <Button onClick={() => setOpen(true)}>Sign UP</Button>\n      </div>\n      }\n      \n      \n  </div>\n  <Modal\n    open={open}\n    onClose={() => setOpen(false)}>\n    <form>\n    <div style={modalStyle} className={classes.paper}>\n    <Input \n      placeholder=\"username\"\n      type=\"username\"\n      value={username}\n      onChange={(e) => setUsername(e.target.value)}\n      />\n    <Input \n      placeholder=\"email\"\n      type=\"text\"\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n    />\n    <Input \n      placeholder=\"password\"\n      type=\"password\"\n      value={password}\n      onChange={(e) => setPassword(e.target.value)} \n    />\n    <Button type='submit' onClick={signUp}>Sign Up</Button>\n    </div>\n  </form>\n  </Modal> \n\n  <Modal\n    open={openSignIn}\n    onClose={() => setOpenSignIn(false)}>\n    <form className=\"app__signup\">\n    <div style={modalStyle} className={classes.paper}>\n\n    <Input \n      placeholder=\"email\"\n      type=\"text\"\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n    />\n    <Input \n      placeholder=\"password\"\n      type=\"password\"\n      value={password}\n      onChange={(e) => setPassword(e.target.value)} \n    />\n    <Button type='submit' onClick={signIn}>Sign In</Button>\n    </div>\n  </form>\n  </Modal> \n\n  \n      \n </header>\n\n <div className=\"app__toDo\">\n {user ?\n  <ToDoChart user={user}/>\n  :<h1>You need to login, to use the website</h1>}\n { user ?\n <ToDoList user={user}/>\n :<h1>: )</h1>} \n\n </div>\n <Journal user={user}/>\n </div>\n)\n\n\n}\n  \n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}